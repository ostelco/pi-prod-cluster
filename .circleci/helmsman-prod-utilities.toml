# metadata -- add as many key/value pairs as you want
[metadata]
maintainer = "Sami Alajrami (sami@praqma.com)"
description = "Desired state file for deploying Prime and its needed utilities."

# paths to the certificate for connecting to the cluster
# you have to use exact key names here : 'caCrt' for certificate and 'caKey' for the key and caClient for the client certificate
[certificates]
caClient = "gs://pi-ostelco-prod-k8s-key-store/keys/prod_cluster_client_certificate.crt" 
caCrt = "gs://pi-ostelco-prod-k8s-key-store/keys/prod_cluster_cluster_ca.crt" 
caKey = "gs://pi-ostelco-prod-k8s-key-store/keys/prod_cluster_client_key.key" 

[settings]
kubeContext = "ostelco" # will try connect to this context first, if it does not exist, it will be created using the details below
username = "admin"
password = "$PROD_CLUSTER_PASSWORD" # the name of an environment variable containing the k8s password
clusterURI = "$PI_PROD_K8S_ENDPOINT" # the name of an environment variable containing the cluster API
serviceAccount = "tiller" # k8s serviceaccount. If it does not exist, it will be created.
storageBackend = "secret" # default is configMap
#slackWebhook = "$slack" # or "your slack webhook url"

# define your environments and their k8s namespaces
# syntax: 
# [namespaces.<your namespace>] -- whitespace before this entry does not matter, use whatever indentation style you like 
 # protected = <true or false> -- default to false 
[namespaces]
  [namespaces.neo4j]


# define any private/public helm charts repos you would like to get charts from
# syntax: repo_name = "repo_url"
# private repos hosted in s3,GCS buckets are supported
[helmRepos]
ostelco="https://storage.googleapis.com/pi-ostelco-helm-charts-repo/"


[apps]

    [apps.cert-manager]
    name = "cert-manager" # should be unique across all apps
    description = "Cert manager for managing SSL certificates."
    namespace = "kube-system" # maps to the namespace as defined in environmetns above
    enabled = true # change to false if you want to delete this app release [empty = flase]
    chart = "stable/cert-manager" # changing the chart name means delete and recreate this chart
    version = "0.3.4"
    valuesFile = "apps/cert-manager-values.yaml" # leaving it empty uses the default chart values
    wait = true
    priority = -9
    protected = true

    [apps.cert-issuer]
    name = "cert-issuer" # should be unique across all apps
    description = "Cluster Issuers for Cert manager."
    namespace = "kube-system" # maps to the namespace as defined in environmetns above
    enabled = true # change to false if you want to delete this app release [empty = flase]
    chart = "ostelco/cert-issuer" # changing the chart name means delete and recreate this chart
    version = "0.2.0"
    valuesFile = "apps/cert-issuer-values.yaml" # leaving it empty uses the default chart values
    priority = -8
    protected = true

    [apps.neo4j]
    name = "neo4j"
    description = "Neo4J deployment"
    namespace = "neo4j"
    enabled = true
    chart = "stable/neo4j"
    version = "0.7.2"
    valuesFile = "apps/neo4j-values.yaml"
    priority = -7 
    wait = true
    protected = true
 